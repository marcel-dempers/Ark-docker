#!/bin/bash

instance=$1

echo "clearing logs ..."
rm ${ARK_DIR}/ShooterGame/Saved/Logs/*.log

echo "starting ${instance} ..."
echo "map name: ${MAP_NAME}"
echo "session name: ${SESSION_NAME}"
echo "server port: ${SERVER_PORT}"
echo "query port: ${QUERY_PORT}" 
echo "rcon port: ${RCON_PORT}"

echo "sourcing arkoptions..."
arkoptions=
for arkoption in "${!arkoption_@}"; do
  arkoptionvalue=${!arkoption}
  arkoption="${arkoption:10}"
  arkoptions="${arkoptions}?${arkoption}=${arkoptionvalue}"
done

echo "setting arkoptions: ${arkoptions}"
export arkoptions=${arkoptions}

echo "sourcing arkflags..."
arkflags=
for arkflag in "${!arkflag_@}"; do
  arkflagvalue=${!arkflag}
  arkflag="${arkflag:8}"
  if [ -z "${arkflagvalue}" ]; then
    arkflags="${arkflags} -${arkflag}"
  else
    arkflags="${arkflags} -${arkflag}=${arkflagvalue}"
  fi
done

echo "setting arkflags: ${arkflags}"
export arkflags=${arkflags}

echo "proton run ${ARK_DIR}/ShooterGame/Binaries/Win64/ArkAscendedServer.exe ${MAP_NAME}?listen?SessionName=\"${SESSION_NAME}\"?ServerPassword=REDACTED?ServerAdminPassword=\"REDACTED\"?Port=${SERVER_PORT}?QueryPort=${QUERY_PORT}?RCONEnabled=True?RCONPort=${RCON_PORT}${arkoptions}${arkflags}"

nohup bash /usr/local/bin/arkmanager.start-instance >/dev/null 2>&1 &
sleep 3
echo "Server should be up in a few minutes"