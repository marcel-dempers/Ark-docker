#!/bin/bash

instance=$1

if ls ${ARK_DIR}/ShooterGame/Saved/Logs/*.log > /dev/null 2>&1; then
    echo "clearing logs ..."
    rm ${ARK_DIR}/ShooterGame/Saved/Logs/*.log
fi

echo "starting ${instance} ..."
echo "map name: ${MAP_NAME}"
echo "session name: ${SESSION_NAME}"
echo "server port: ${SERVER_PORT}"
echo "rcon port: ${RCON_PORT}"

echo "sourcing arkoptions..."
arkoptions=
for arkoption in "${!arkoption_@}"; do
  arkoptionvalue=${!arkoption}
  arkoption="${arkoption:10}"
  arkoptions="${arkoptions}?${arkoption}=${arkoptionvalue}"
done

echo "setting arkoptions: ${arkoptions}"
export arkoptions=${arkoptions}

echo "sourcing arkflags..."
arkflags=
for arkflag in "${!arkflag_@}"; do
  arkflagvalue=${!arkflag}
  arkflag="${arkflag:8}"
  if [ -z "${arkflagvalue}" ]; then
    arkflags="${arkflags} -${arkflag}"
  else
    arkflags="${arkflags} -${arkflag}=${arkflagvalue}"
  fi
done

echo "setting arkflags: ${arkflags}"
export arkflags=${arkflags}

_cluster_id=""
if [ -z "$CLUSTER_ID" ]; then
  echo "no cluster id set"
else
  _cluster_id=" -clusterid=${CLUSTER_ID}"
fi

export _cluster_id=${_cluster_id}
echo "clusterid: ${_cluster_id}"

echo "proton run ${ARK_DIR}/ShooterGame/Binaries/Win64/ArkAscendedServer.exe ${MAP_NAME}?SessionName=\"${SESSION_NAME}\"?ServerPassword=REDACTED?ServerAdminPassword=\"REDACTED\"?Port=${SERVER_PORT}?RCONEnabled=True?RCONPort=${RCON_PORT}${arkoptions}${_cluster_id}${arkflags}"

if [ -f "${ARK_DIR}/.arkmanager/arkmanager.${instance}.log" ]; then
    echo "removing old instance debug log file ..."
    rm "${ARK_DIR}/.arkmanager/arkmanager.${instance}.log"
fi

if [ -f "${ARK_DIR}/.arkmanager/arkmanager.${instance}.pid" ]; then
    echo "removing old instance pid file ..."
    rm "${ARK_DIR}/.arkmanager/arkmanager.${instance}.pid"
fi

nohup bash /usr/local/bin/arkmanager.start-instance > ${ARK_DIR}/.arkmanager/arkmanager.${instance}.log 2>&1 &
sleep 3

echo "creating PID file ..."
mkdir -p ${ARK_DIR}/.arkmanager

BASH_PID="$!"
echo "instance started with bash PID $BASH_PID ..."
PROTON_PID=$(pstree -p $BASH_PID | grep -Po 'python3\(\K[0-9]+')
echo "instance started with proton PID $PROTON_PID ..."

# writing pid file data
echo "PID_ID=$PROTON_PID" >>"${ARK_DIR}/.arkmanager/arkmanager.${instance}.pid"
echo "PID_IP=$(curl -s ifconfig.me)" >>"${ARK_DIR}/.arkmanager/arkmanager.${instance}.pid"

echo "Server should be up in a few minutes"